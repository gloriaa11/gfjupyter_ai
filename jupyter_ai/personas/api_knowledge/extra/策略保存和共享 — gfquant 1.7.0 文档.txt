
策略保存和共享
View page source
策略保存和共享
¶
回测平台上编写的策略代码直接保存在notebook文件(.ipynb)中，只有本人能查看和使用。而通过使用
bt_save
和
bt_load
两个命令，可以将策略保存到量化投研平台，也可以共享给其他用户。
保存策略到投研平台
¶
回测平台打通了量化投研平台的数据库，可以通过在notebook中运行特定命令将策略代码保存到投研平台。已保存的策略可以在量化投研平台
因子选股策略生成器
中运行和查看结果，还可以进一步导入到
组合管理模块(PMS)
。
保存策略示例
在notebook中使用
%%bt_save
命令来保存当前单元格中的策略代码到数据库。例如要将策略代码保存到一个新建策略，并名为“沪深300A” ，命令如下(注意保存策略的命令前要用两个%号)：
%%bt_save
-n
沪深300A
在调试完了策略，确认运行正常，且所有依赖的import和函数定义都在当前单元格中后，在第一行加上保存策略的命令即可。
请在确认下面单元格中的代码运行正常后，去掉第一行的注释符号
#
，再运行一次来保存策略。
[ ]:
# %%bt_save -n 一个策略20191016
import
datetime
as
dt
from
gfquant
import
run_backtest
config
=
{
'start_date'
:
'20181228'
,
'end_date'
:
'20190930'
,
'benchmark'
:
'000300.SH'
}
def
init
(
bt
):
bt
.
log
.
info
(
f
'测试开始... @ {dt.datetime.now()}'
)
def
run_daily
(
bt
):
if
bt
.
today
==
dt
.
datetime
(
2019
,
9
,
12
):
bt
.
log
.
info
(
f
'中秋节快乐! @ {dt.datetime.now()}'
)
report
=
run_backtest
(
config
,
init
=
init
,
run_daily
=
run_daily
,
finished
=
None
)
注意事项
策略保存后不会自动运行，需要到投研平台
因子选股策略生成器
图形界面运行策略、查看结果。
策略用到的import模块和相关函数的代码必须都保存到
同一个单元格
里，避免在运行时因为找不到import报错！
加载已保存的策略
¶
列出已保存的策略
在notebook中使用不带参数的
%bt_load
命令来列出所有策略。运行下面的单元格，如果在上一单元格运行了保存命令，至少应该看到一个策略，可能还同时列出了他人共享出来的策略。
[1]:
%
bt_load
[1]:
策略id
策略名称
用户
创建日期
修改时间
策略描述
是否公开
0
22
测试策略
guosj
2019-09-10
2019-10-15 15:56:20
我有一个策略，它有时亏钱有时赚钱test
Y
1
143
一个策略20191016
chenhc
2019-09-25
2019-10-18 09:36:57
None
Y
2
163
来自文档的示例策略
doc
2019-10-11
2019-10-18 09:21:09
来自文档的示例策略
Y
加载策略代码
使用
%bt_load
-s
163
来加载id=163的策略的代码，策略id可以从上面列出的策略列表中找。示例如下：
[ ]:
%
bt_load
-s 163
策略的管理和共享
¶
常用的策略管理和共享设置命令举例如下：
更新策略代码
用本单元格的策略代码更新一个已存在的id为123的策略：
%%bt_save
-s
123
如果修改(更新)了策略代码，用旧版本代码运行和保存的回测结果不会自动更新，可以在图形界面里按需要手动设定日期区间，用新版本代码重新运行策略。
设置为公开策略
将id为123的策略设置为公开(修改策略属性不需要单元格里有策略代码，只需要一个%号)：
%bt_save
-s
123
-p
Y
已公开的策略，其他登录用户都能在
因子选股策略生成器
看到，也能从回测平台里用
%bt_load
加载其代码。如需支持细化到每个用户的权限设置，请将策略导入到
组合管理模块(PMS)
并设置权限。
删除已保存的策略
删除id为123的策略(删除策略命令不需要单元格里有策略代码，只需要一个%号)：
%bt_save
--delete
123
列出策略所有版本的历史代码
列出id为123的策略的所有版本的历史代码：
%bt_load
-h
123
查看命令参数选项
命令除了上述用法之外还有一些功能。新建一个单元格，在命令后加一个英文的
?
号再运行，即可查看完整的参数选项：
%%bt_save?
%bt_save [--name NAME] [--desc DESC] [--public PUBLIC]
[--strategy STRATEGY] [--delete DELETE]
将本单元格的策略代码保存到数据库中，根据参数不同可以是创建新策略或更新已存在的策略。
基本用法示例(两个%号的命令为操作整个单元格的内容，只保存策略不运行，请到投研平台图形界面手动重新运行策略)：
%%bt_save -n 沪深300A          将本单元格的策略代码保存到一个新建策略，并将策略命名为"沪深300A"
%%bt_save -s 123               用本单元格的策略代码更新一个已存在的id为123的策略
扩展用法示例(一个%号的命令是只操作一行的命令，修改策略属性也可以在投研平台用图形界面操作)：
%bt_save -s 123 -n 沪深300B    更新一个已存在的id为123的策略，将名称改为"沪深300B"
%bt_save -s 123 -d 策略描述B   更新一个已存在的id为123的策略，将描述改为"策略描述B"
%bt_save -s 123 -p Y           更新一个已存在的id为123的策略，将策略设为公开的(其他用户也可以访问但不能修改)
%bt_save --delete 123          删除id为123的策略
optional arguments:
--name NAME, -n NAME  策略名称(≤50字符)
--desc DESC, -d DESC  策略描述(≤1000字符)
--public PUBLIC, -p PUBLIC
是否公开，一个字符: Y=公开，N=不公开(默认值)
--strategy STRATEGY, -s STRATEGY
已存在的策略id(更新策略)
--delete DELETE       根据策略id删除策略
%bt_load?
%bt_load [--strategy STRATEGY] [--code CODE] [--history HISTORY]
[--keyword KEYWORD] [--user [USER]]
从数据库加载已保存的策略代码到本单元格，也可以搜索策略代码。
基本用法示例：
%bt_load           不带任何参数，列出可加载的策略列表
%bt_load -s 123    指定加载id为123的策略的最新代码
扩展用法示例：
%bt_load -u        列出自己创建的策略列表
%bt_load -u lixy   列出用户lixy创建的策略列表
%bt_load -k 估值   列出策略名称或描述里包含"估值"的策略
%bt_load -h 123    列出id为123的策略的所有版本的历史代码
%bt_load -c 666    指定加载代码id为666的历史代码
optional arguments:
--strategy STRATEGY, -s STRATEGY
根据策略id取策略的最新代码
--code CODE, -c CODE  根据代码id取代码
--history HISTORY, -h HISTORY
取策略id的历史代码列表
--keyword KEYWORD, -k KEYWORD
搜索策略名称或描述
--user <[USER]>, -u <[USER]>
只列出某个用户的策略(不指定用户名则只列出自己的策略)
[ ]:
%
bt_load
?
Next
Previous
© Copyright 2018-2022, GF Funds 量化投资部
Built with
Sphinx
using a
theme
provided by
Read the Docs
.